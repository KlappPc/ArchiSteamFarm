<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CategoryAccess" xml:space="preserve">
    <value>Acceso</value>
  </data>
  <data name="CategoryAdvanced" xml:space="preserve">
    <value>Avanzado</value>
  </data>
  <data name="CategoryCore" xml:space="preserve">
    <value>Núcleo</value>
  </data>
  <data name="CategoryDebugging" xml:space="preserve">
    <value>Depurando</value>
  </data>
  <data name="CategoryPerformance" xml:space="preserve">
    <value>Rendimiento</value>
  </data>
  <data name="CategoryUpdates" xml:space="preserve">
    <value>Actualizaciones</value>
  </data>
  <data name="ConfirmRemoval" xml:space="preserve">
    <value>¿Seguro que quieres eliminar esta configuración?</value>
  </data>
  <data name="ErrorBotNameEmpty" xml:space="preserve">
    <value>¡El nombre de tu bot está vacío!</value>
  </data>
  <data name="ErrorCantRemoveGlobalConfig" xml:space="preserve">
    <value>¡No puedes eliminar la configuración global!</value>
  </data>
  <data name="ErrorCantRenameGlobalConfig" xml:space="preserve">
    <value>¡No puedes renombrar la configuración global!</value>
  </data>
  <data name="ErrorConfigDirectoryNotFound" xml:space="preserve">
    <value>¡No se pudo encontrar el directorio de configuración!</value>
  </data>
  <data name="ErrorConfigPropertyInvalid" xml:space="preserve">
    <value>La propiedad {0} configurada es inválida: {1}</value>
    <comment>{0} will be replaced by name of the configuration property, {1} will be replaced by invalid value</comment>
  </data>
  <data name="ErrorInvalidCurrentCulture" xml:space="preserve">
    <value>El CurrentCulture proporcionado no es válido, ¡ConfigGenerator seguirá funcionando con el predeterminado!</value>
  </data>
  <data name="ErrorNameAlreadyUsed" xml:space="preserve">
    <value>¡Este nombre ya está en uso!</value>
    <comment>This happens e.g. when user wants to create a bot with name that exists already</comment>
  </data>
  <data name="ErrorNameReserved" xml:space="preserve">
    <value>¡Este nombre está reservado!</value>
    <comment>This happens e.g. when user wants to create a bot with reserved name, such as "ASF"</comment>
  </data>
  <data name="ErrorObjectIsNull" xml:space="preserve">
    <value>¡{0} es nulo!</value>
    <comment>{0} will be replaced by object's name</comment>
  </data>
  <data name="ErrorVersionMismatch" xml:space="preserve">
    <value>¡Has intentado usar una versión no válida de ConfigGenerator para tu ASF!

ASF: {0} | ConfigGenerator: {1}

Por favor, usa la versión de ConfigGenerator correspondiente a tu ejecutable de ASF. Se te redigirá a la edición apropiada...</value>
    <comment>{0} will be replaced by ASF version (string), {1} will be replaced by ConfigGenerator version (string). Please note that this string should include newlines for formatting.</comment>
  </data>
  <data name="New" xml:space="preserve">
    <value>Nuevo</value>
    <comment>This is used as MessageBox title</comment>
  </data>
  <data name="Removal" xml:space="preserve">
    <value>Eliminación</value>
    <comment>This is used as MessageBox title</comment>
  </data>
  <data name="Rename" xml:space="preserve">
    <value>Renombrar</value>
    <comment>This is used as MessageBox title</comment>
  </data>
  <data name="TutorialBotFormEnabled" xml:space="preserve">
    <value>¡Excelente! Ahora tu instancia de bot está habilitada. De hecho, eso es todo lo que tenías que hacer para usar este bot en ASF, pero puede que quieras configurar al menos 2 propiedades de configuración más: {0} y {1}. Si quieres continuar con el tutorial, por favor, hazlo. Recuerda consultar la wiki si no estás seguro de como una determinada propiedad debería ser configurada, o si necesitas ayuda adicional.</value>
    <comment>{0} will be replaced by "SteamLogin" configuration property, {1} will be replaced by "SteamPassword" configuration property</comment>
  </data>
  <data name="TutorialBotFormReady" xml:space="preserve">
    <value>¡Tu ASF ya está listo! Simplemente lanza el ejecutable ASF.exe y si has escrito todo correctamente, verás que ASF inicia sesión y empieza a conseguir cromos. Si tienes activado SteamGuard o la autenticación en dos pasos, ASF puede que te pregunte por esas credenciales durante el proceso.</value>
  </data>
  <data name="TutorialFinished" xml:space="preserve">
    <value>¡Felicidades! Has hecho todo lo necesario para hacer que ASF funcione y con esto finaliza el tutorial que hemos preparado para ti. Es muy recomendable que leas completamente la sección de configuración en la wiki, ya que ASF tiene tiene otras características realmente estupendas para que las configures, tales cómo sacar cromos sin conexión o cómo ajustar ASF con el algoritmo más eficiente para tu cuenta. No obstante, todo eso es opcional y siempre puedes usar nuestro configurador cuando lo necesites. ¡Esperemos que disfrutes del software que hemos programado para ti!</value>
  </data>
  <data name="TutorialMainFormBotsManagementButtons" xml:space="preserve">
    <value>En la parte superior de la ventana puedes ver las configuraciones cargadas actualmente, así como tres botones extra para eliminar [-], renombrar [~] y añadir nuevas[+].</value>
    <comment>If possible, try to keep visual representation of buttons: [-], [~] and [+]</comment>
  </data>
  <data name="TutorialMainFormConfigurationWiki" xml:space="preserve">
    <value>Toda la información acerca de las propiedades de configuración disponibles (incluyendo su descripción, finalidad y valores aceptados) está disponible en nuestra wiki de GitHub. No dudes en usarla como referencia.</value>
  </data>
  <data name="TutorialMainFormConfigurationWindow" xml:space="preserve">
    <value>En medio de la ventana puedes configurar todas las propiedades disponibles para tu configuración seleccionada actualmente.</value>
  </data>
  <data name="TutorialMainFormFinished" xml:space="preserve">
    <value>De acuerdo, empecemos a configurar ASF. ¡Clica en el botón [+] para añadir tu primera cuenta de steam!</value>
    <comment>If possible, try to keep visual representation of [+] button</comment>
  </data>
  <data name="TutorialMainFormHelpButton" xml:space="preserve">
    <value>En la esquina superior derecha encontrarás el botón de ayuda [?], el cual te redirigirá a la wiki de ASF para más información.</value>
    <comment>If possible, try to keep visual representation of [?] button</comment>
  </data>
  <data name="TutorialMainFormShown" xml:space="preserve">
    <value>Esta es la pantalla principal del generador de configuraciones de ASF. ¡Es muy fácil de usar!</value>
  </data>
  <data name="TutorialNewBotFormFinished" xml:space="preserve">
    <value>¡Como puedes ver, tu bot ya está listo para ser configurado! Lo primero que querrás hacer es cambiar la propiedad {0} de falso a verdadero. ¡Pruébalo!</value>
    <comment>{0} will be replaced by name of the configuration property ("Enabled")</comment>
  </data>
  <data name="TutorialNewBotFormShown" xml:space="preserve">
    <value>¡Bien hecho! Ahora se te pedirá el nombre de tu bot. Un buen ejemplo podría ser un nick que estés usando para la cuenta de steam que vas a configurar, o cualquier otro nombre a tu elección que te permita conectar con facilidad con la instancia del bot que está siendo configurado.</value>
  </data>
  <data name="TutorialStart" xml:space="preserve">
    <value>¡Bienvenido! Me he dado cuenta de que estás usando ASF ConfigGenerator por primera vez, así que déjame que te ayude un poco.</value>
  </data>
  <data name="UserInputBotName" xml:space="preserve">
    <value>Por favor, introduzca el nuevo nombre del bot: </value>
    <comment>Please note that this translation should end with space</comment>
  </data>
  <data name="WarningConfigPropertyModified" xml:space="preserve">
    <value>{0} se ha establecido a: {1}</value>
    <comment>{0} will be replaced by name of the configuration property, {1} will be replaced by new value</comment>
  </data>
</root>
